$(document).ready(function() {
    // Function to initialize form validation
    function initFormValidation() {
        'use strict';
        var forms = document.querySelectorAll('.needs-validation');
        Array.prototype.slice.call(forms).forEach(function(form) {
            form.addEventListener('submit', function(event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    }

    // Handle input validation feedback
    function handleInputValidation() {
        document.querySelectorAll('.form-control, .form-select').forEach(input => {
            input.addEventListener('input', function() {
                if (input.checkValidity()) {
                    input.classList.add('is-valid');
                    input.classList.remove('is-invalid');
                } else {
                    input.classList.add('is-invalid');
                    input.classList.remove('is-valid');
                }
            });
        });
    }

    // Save data from current session
    function saveSessionData(currentSession) {
        var formData = $('#applicationForm').serialize(); // Collect form data
    
        console.log('Form data before submission: ', formData); // Log form data
        
        $.ajax({
            url: 'save_session.php', // Ensure this path is correct
            type: 'POST',
            data: formData, // Send the form data
            success: function(response) {
                console.log('Data saved for session1: ', response); // Log the response
            },
            error: function(xhr, status, error) {
                console.log('Error: ', error); // Log any error
            }
        });
    }
    

    // Navigate between form sessions
    function goToNextSession(currentSession, nextSession) {
        var currentForm = document.getElementById(currentSession);
        var inputs = currentForm.querySelectorAll('input, select');  // Only validate inputs in the current session
        var isValid = true;

        inputs.forEach(input => {
            if (!input.checkValidity()) {
                input.classList.add('is-invalid');
                isValid = false;
            } else {
                input.classList.add('is-valid');
            }
        });

        if (isValid) {
            saveSessionData(currentSession); // Save data before moving
            $('#' + currentSession).addClass('d-none');
            $('#' + nextSession).removeClass('d-none');
        } else {
            currentForm.classList.add('was-validated');
        }
    }

    // Initialize form navigation
    function initFormNavigation() {
        $('#nextToSession2').click(function() {
            goToNextSession('session1', 'session2');
        });

        $('#nextToSession3').click(function() {
            goToNextSession('session2', 'session3');
        });

        $('#nextToSession4').click(function() {
            goToNextSession('session3', 'session4');
        });

        $('#prevToSession1').click(function() {
            $('#session2').addClass('d-none');
            $('#session1').removeClass('d-none');
        });

        $('#prevToSession2').click(function() {
            $('#session3').addClass('d-none');
            $('#session2').removeClass('d-none');
        });

        $('#prevToSession3').click(function() {
            $('#session4').addClass('d-none');
            $('#session3').removeClass('d-none');
        });
    }

    // Handle dynamic Province/District/Tumbon selection
    function initDropdownDependencies() {
        function fetchData(action, province = '', district = '', tumbon = '') {
            $.ajax({
                url: "fetch_data.php",  // Single PHP file for all fetch requests
                method: "POST",
                data: {action: action, province: province, district: district, tumbon: tumbon},
                success: function(data) {
                    if(action === 'fetch_districts') {
                        $('#district').html(data);  // Update district dropdown
                        $('#tumbon').html('<option selected disabled value="">--เลือก--</option>');  // Reset tumbon dropdown
                        $('#zipcode').val('');  // Clear zipcode
                    } else if(action === 'fetch_tumbons') {
                        $('#tumbon').html(data);  // Update tumbon dropdown
                        $('#zipcode').val('');  // Clear zipcode
                    } else if(action === 'fetch_zipcode') {
                        $('#zipcode').val(data);  // Set zipcode field
                    }
                }
            });
        }

        $('#province').change(function(){
            var province = $(this).val();
            if(province != '') {
                fetchData('fetch_districts', province);  // Fetch districts based on province
            }
        });

        $('#district').change(function(){
            var province = $('#province').val();
            var district = $(this).val();
            if(province != '' && district != '') {
                fetchData('fetch_tumbons', province, district);  // Fetch tumbons based on province and district
            }
        });

        $('#tumbon').change(function(){
            var province = $('#province').val();
            var district = $('#district').val();
            var tumbon = $(this).val();
            if(province != '' && district != '' && tumbon != '') {
                fetchData('fetch_zipcode', province, district, tumbon);  // Fetch zipcode based on tumbon
            }
        });
    }

    // Handle dynamic branch and job_name selection
    function initBranchAndjob_name() {
        $('#sub_branch').change(function() {
            var sub_branch = $(this).val();
            if (sub_branch != '') {
                $.ajax({
                    url: "fetch_branch.php", // PHP file to fetch branches and job names
                    method: "POST",
                    data: { action: 'fetch_branch', sub_branch: sub_branch }, // Pass sub_branch
                    success: function(data) {
                        $('#branch').html(data); // Populate the branch dropdown
                        $('#job_name').html('<option selected disabled value="">--เลือก--</option>'); // Reset job_name dropdown
                    }
                });
            } else {
                $('#branch').html('<option selected disabled value="">--เลือก--</option>'); // Reset branch dropdown
                $('#job_name').html('<option selected disabled value="">--เลือก--</option>'); // Reset job_name dropdown
            }
        });
    
        $('#branch').change(function() {
            var sub_branch = $('#sub_branch').val();
            var branch = $(this).val();
            if (sub_branch != '' && branch != '') {
                $.ajax({
                    url: "fetch_branch.php", // PHP file to fetch job names
                    method: "POST",
                    data: { action: 'fetch_job_name', sub_branch: sub_branch, branch: branch },
                    success: function(data) {
                        $('#job_name').html(data); // Populate the job_name dropdown
                    }
                });
            } else {
                $('#job_name').html('<option selected disabled value="">--เลือก--</option>'); // Reset job_name dropdown
            }
        });
    
        // Step 2: Log job_no when the job is selected
        $('#job_name').change(function() {
            var job_no = $(this).val(); // Capture job_no when a job is selected
            console.log("Selected job_no: " + job_no); // Log job_no for debugging
        });
    }
    
    

    // Initialize form functionality
    function init() {
        initFormValidation();     // Form validation
        handleInputValidation();  // Real-time validation
        initFormNavigation();     // Form section navigation
        initDropdownDependencies(); // Province/District/Tumbon/Zipcode dependencies
        initBranchAndjob_name();   // Branch and job_name fetching
    }

    // Call the init function
    init();
});




function autoTab(obj,typeCheck){
    /* กำหนดรูปแบบข้อความโดยให้ _ แทนค่าอะไรก็ได้ แล้วตามด้วยเครื่องหมาย
    หรือสัญลักษณ์ที่ใช้แบ่ง เช่นกำหนดเป็น  รูปแบบเลขที่บัตรประชาชน
    4-2215-54125-6-12 ก็สามารถกำหนดเป็น  _-____-_____-_-__
    รูปแบบเบอร์โทรศัพท์ 08-4521-6521 กำหนดเป็น __-____-____
    หรือกำหนดเวลาเช่น 12:45:30 กำหนดเป็น __:__:__
    ตัวอย่างข้างล่างเป็นการกำหนดรูปแบบเลขบัตรประชาชน
    */
        if(typeCheck==1){
            var pattern=new String("_-____-_____-_-__"); // กำหนดรูปแบบในนี้
            var pattern_ex=new String("-"); // กำหนดสัญลักษณ์หรือเครื่องหมายที่ใช้แบ่งในนี้     
        }else if(typeCheck==2){
            var pattern=new String("_-____-____"); // กำหนดรูปแบบในนี้
            var pattern_ex=new String("-"); // กำหนดสัญลักษณ์หรือเครื่องหมายที่ใช้แบ่งในนี้                 
        }else{
		    var pattern=new String("__-____-____"); // กำหนดรูปแบบในนี้
            var pattern_ex=new String("-"); // กำหนดสัญลักษณ์หรือเครื่องหมายที่ใช้แบ่งในนี้ 
		}
        var returnText=new String("");
        var obj_l=obj.value.length;
        var obj_l2=obj_l-1;
        for(i=0;i<pattern.length;i++){           
            if(obj_l2==i && pattern.charAt(i+1)==pattern_ex){
                returnText+=obj.value+pattern_ex;
                obj.value=returnText;
            }
        }
        if(obj_l>=pattern.length){
            obj.value=obj.value.substr(0,pattern.length);           
        }
}

function auto_sex(){
 var title = document.getElementById("title").value;
 if(title == "นาย"){
  document.getElementById("sex").value = "ชาย";
  document.getElementById("military").style.display = "block";
  document.getElementById("not_military").disabled = false;
  document.getElementById("discharged").disabled = false;
  document.getElementById("studied_military").disabled = false;
  document.getElementById("exempted").disabled = false;
 }else if (title == "นาง" || title == "นางสาว"){
  document.getElementById("sex").value = "หญิง";
  document.getElementById("military").style.display = "none";
  document.getElementById("not_military").checked = "";
  document.getElementById("discharged").checked = "";
  document.getElementById("studied_military").checked = "";
  document.getElementById("exempted").checked = "";
  document.getElementById("not_military").disabled = true;
  document.getElementById("discharged").disabled = true;
  document.getElementById("studied_military").disabled = true;
  document.getElementById("exempted").disabled = true;
 }else{
  document.getElementById("sex").value = "";
  document.getElementById("military").style.display = "block";
  document.getElementById("not_military").disabled = false;
  document.getElementById("discharged").disabled = false;
  document.getElementById("studied_military").disabled = false;
  document.getElementById("exempted").disabled = false;
 }
}

function calAge(o){
 var tmp = o.value.split("-");
 var current = new Date();
 var current_year = current.getFullYear();
 if(tmp[0] <= 2500){
  document.getElementById("age").value = current_year - tmp[0] +" ปี";
 }else{
  document.getElementById("age").value = (current_year+543) - tmp[0] +" ปี";
 }
}

function numberWithCommas() {
  var salary = document.getElementById("salary").value
  document.getElementById("salary").value = salary.replace(/\B(?=(\d{3})+\b)/g, ",");
}
/*
$(function(){
    var requiredCheckboxes = $('.options :checkbox[required]');
    requiredCheckboxes.change(function(){
        if(requiredCheckboxes.is(':checked')) {
            requiredCheckboxes.removeAttr('required');
        } else {
            requiredCheckboxes.attr('required', 'required');
        }
    });
});
*/
$(function () {
	document.getElementById('disease_input').style.display = 'none';
  $("input[name='radiocongenital_disease']").click(function () {
    if($("#yes_disease").is(":checked")) {
       $("#disease_input").removeAttr("disabled");
       $("#disease_input").focus();
	   document.getElementById('disease_input').style.display = 'block';
     } else {
       $("#disease_input").attr("disabled", "disabled");
	   document.getElementById("disease_input").value = "";
	   document.getElementById('disease_input').style.display = 'none';
     }
   });
});

$(function () {
	document.getElementById('disabled_input').style.display = 'none';
  $("input[name='radiodisabled']").click(function () {
    if($("#disabled").is(":checked")) {
      $("#disabled_input").removeAttr("disabled");
	  document.getElementById('disabled_input').style.display = 'block';
      $("#disabled_input").focus();
    } else {
      $("#disabled_input").attr("disabled", "disabled");
	  document.getElementById("disabled_input").value = "";
	  document.getElementById('disabled_input').style.display = 'none';
    }
  });
});